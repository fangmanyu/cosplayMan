<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="xin.stxkfzx.cosplayman.mapper.CommentMapper">
  <resultMap id="BaseResultMap" type="xin.stxkfzx.cosplayman.domain.Comment">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="comment_id" jdbcType="INTEGER" property="commentId" />
    <result column="comment_content" jdbcType="VARCHAR" property="commentContent" />
    <result column="pageview" jdbcType="INTEGER" property="pageview" />
    <result column="likes" jdbcType="INTEGER" property="likes" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="type" jdbcType="INTEGER" property="type" />
    <result column="belong_id" jdbcType="INTEGER" property="belongId" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="parent_id" jdbcType="INTEGER" property="parentId" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    comment_id, comment_content, pageview, likes, create_time, type, belong_id, user_id, 
    parent_id
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from comment
    where comment_id = #{commentId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from comment
    where comment_id = #{commentId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" keyColumn="comment_id" keyProperty="commentId" parameterType="xin.stxkfzx.cosplayman.domain.Comment" useGeneratedKeys="true">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into comment (comment_content, pageview, likes, 
      create_time, type, belong_id, 
      user_id, parent_id)
    values (#{commentContent,jdbcType=VARCHAR}, #{pageview,jdbcType=INTEGER}, #{likes,jdbcType=INTEGER}, 
      #{createTime,jdbcType=TIMESTAMP}, #{type,jdbcType=INTEGER}, #{belongId,jdbcType=INTEGER}, 
      #{userId,jdbcType=INTEGER}, #{parentId,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" keyColumn="comment_id" keyProperty="commentId" parameterType="xin.stxkfzx.cosplayman.domain.Comment" useGeneratedKeys="true">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into comment
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="commentContent != null">
        comment_content,
      </if>
      <if test="pageview != null">
        pageview,
      </if>
      <if test="likes != null">
        likes,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="belongId != null">
        belong_id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="parentId != null">
        parent_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="commentContent != null">
        #{commentContent,jdbcType=VARCHAR},
      </if>
      <if test="pageview != null">
        #{pageview,jdbcType=INTEGER},
      </if>
      <if test="likes != null">
        #{likes,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="type != null">
        #{type,jdbcType=INTEGER},
      </if>
      <if test="belongId != null">
        #{belongId,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="parentId != null">
        #{parentId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="xin.stxkfzx.cosplayman.domain.Comment">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update comment
    <set>
      <if test="commentContent != null">
        comment_content = #{commentContent,jdbcType=VARCHAR},
      </if>
      <if test="pageview != null">
        pageview = #{pageview,jdbcType=INTEGER},
      </if>
      <if test="likes != null">
        likes = #{likes,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="belongId != null">
        belong_id = #{belongId,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="parentId != null">
        parent_id = #{parentId,jdbcType=INTEGER},
      </if>
    </set>
    where comment_id = #{commentId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="xin.stxkfzx.cosplayman.domain.Comment">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update comment
    set comment_content = #{commentContent,jdbcType=VARCHAR},
      pageview = #{pageview,jdbcType=INTEGER},
      likes = #{likes,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      type = #{type,jdbcType=INTEGER},
      belong_id = #{belongId,jdbcType=INTEGER},
      user_id = #{userId,jdbcType=INTEGER},
      parent_id = #{parentId,jdbcType=INTEGER}
    where comment_id = #{commentId,jdbcType=INTEGER}
  </update>
</mapper>