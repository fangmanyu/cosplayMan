# 数据库连接信息
spring.datasource.url=jdbc:mysql://localhost:3306/cosplayman?useSSL=false&useUnicode=true&characterEncoding=utf8
spring.datasource.driver-class-name=com.mysql.jdbc.Driver
spring.datasource.username=root
spring.datasource.password=root

## druid 连接池配置
### 初始化大小，最小，最大
spring.datasource.initialSize=5
spring.datasource.minIdle=1
spring.datasource.maxActive=50

spring.datasource.type=com.alibaba.druid.pool.DruidDataSource

### 配置获取连接等待超时的时间
spring.datasource.maxWait=60000

### 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
spring.datasource.timeBetweenEvictionRunsMillis=60000

### 配置一个连接在池中最小生存的时间，单位是毫秒
spring.datasource.minEvictableIdleTimeMillis=300000
spring.datasource.validationQuery=SELECT 1 FROM DUAL
spring.datasource.testWhileIdle=true
spring.datasource.testOnBorrow=false
spring.datasource.testOnReturn=false


### 打开PSCache，并且指定每个连接上PSCache的大小
### 如果用Oracle，则把poolPreparedStatements配置为true，mysql可以配置为false。分库分表较多的数据库，建议配置为false。
spring.datasource.poolPreparedStatements= false
### spring.datasource.maxPoolPreparedStatementPerConnectionSize=20


### 连接泄漏处理。Druid提供了RemoveAbandanded相关配置，用来关闭长时间不使用的连接（例如忘记关闭连接）。 -->
####spring.datasource.removeAbandoned = true
### 1800秒，也就是30分钟
####spring.datasource.removeAbandonedTimeout= 1800
###  <!-- 关闭abanded连接时输出错误日志 -->
#spring.datasource.logAbandoned= true

### 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
spring.datasource.filters=stat

### 通过connectProperties属性来打开mergeSql功能；慢SQL记录
spring.datasource.connectionProperties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000

### 合并多个DruidDataSource的监控数据
####spring.datasource.useGlobalDataSourceStat=true

## MyBatis 配置
### 指向 mapper 的 xml 位置
mybatis.mapper-locations=classpath:mapper/*Mapper.xml
### 设置别名
mybatis.type-aliases-package=xin.stxkfzx.cosplayman.domain
#type-aliases-package=xin.stxkfzx.cosplayman.mapper
#mybatis.check-config-location=true

## 设置上传文件大小
spring.servlet.multipart.enabled=true
spring.servlet.multipart.max-file-size=1024MB
spring.servlet.multipart.max-request-size=1024MB

server.tomcat.accesslog.enabled=true

## 日志配置
### 日志文件
#logging.file=cosplayman.log
### 设置mapper log日志级别
logging.level.xin.stxkfzx.cosplayman.mapper=debug
#debug=true
logging.config=classpath:log4j2.xml


